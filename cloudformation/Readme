**********  This file will give you the steps to deploy the cloudformation stacks  **********

1. The vpcstack contains the vpc components. These components are referenced in the webstack. Currently, the reference part is commented but you can enable it anytime by uncommenting and tweaking.

2. The webstack possess all the components to launch a web application. You can use the below command in the aws cli to launch the validate, launch or update the stack.

3. There are two cicd stacks namely cicd-with-codebuild.yaml and cicd-with-jenkins.yaml. The difference between them lies in the CI servers. One has codebuild as the CI server and the other has jenkins as a CI server.

-> Make sure you have installed AWS cli in your development machine. Configure the secret key and access key in the aws cli. Always use environment variables for the same so that the lifetime of the credentials is only till the time the shell exists.

-> Create a SSH key pair in the Mumbai AWS region. Pass the keypair name as a parameter to the cloudformation command.

-> Create a TLS certificate

1. Generate a private key

   $ openssl genrsa 2048 > my-private-key.pem

2. Generate certificate using private key, you will be prompted to fill some fields. Fill required fields randomly, except for Common Name fill it with *.amazonaws.com or your valid domain name

   $ openssl req -new -x509 -nodes -sha256 -days 365 -key my-private-key.pem -outform PEM -out my-certificate.pem

3. Upload certificate & its private key to Amazon Certificate Manager. As a result of the below command, a certificate arn will be generated. Pass the arn as a parameter in the next cloudformation command/API.

   $ aws acm import-certificate --certificate fileb://my-certificate.pem --private-key fileb://my-private-key.pem

-> Find the public IP of your development machine using https://whatismyipaddress.com/ Configure this IP in the parameter of the cloudformation command so that only your development machine can do ssh access in the ec2 instance and can access the ALB. Launch the stack in the Mumbai region to avoid high data transfer charges. If you used US region, then aws sometimes by default uses cloudfront to route the request faster and thus this can incur charges. Copy the free tier AMI-ID, free tier EC2-instance type(t2.micro), default vpcid, subnet id from the aws management console with respect to the correct AWS region.

-> create the cloudformation web stack

$ aws cloudformation create-stack --stack-name ramos-web-stack --template-body file://webstack.yaml --parameters ParameterKey=parameterAMIID,ParameterValue=ami-0caf778a172362f1c ParameterKey=parameterEC2InstanceType,ParameterValue=t2.micro ParameterKey=parameterSSHKeyPair,ParameterValue=ramos-key-pair ParameterKey=parameterSubnetID,ParameterValue="subnet-0debb249acb38b4d4\,subnet-0ee586e037be70cbd" ParameterKey=parameterVPCID,ParameterValue=vpc-09463952260ce2d21 ParameterKey=parameterTLSCertificateARN,ParameterValue=arn:aws:acm:ap-south-1:452351931860:certificate/33416963-436a-46a5-8bdd-846742c81785 ParameterKey=parameterIPForLoadBalancerAccess,ParameterValue=182.70.20.55/32 ParameterKey=parameterIPForSSHAccess,ParameterValue=182.70.20.55/32 --capabilities CAPABILITY_IAM

(Please check how you have inputted multiple values(list) for the parameterSubnetID parameter)

-> update the cloudformation web stack

$ aws cloudformation update-stack --stack-name ramos-web-stack --template-body file://webstack.yaml --parameters ParameterKey=parameterAMIID,ParameterValue=ami-0caf778a172362f1c ParameterKey=parameterEC2InstanceType,ParameterValue=t2.micro ParameterKey=parameterSSHKeyPair,ParameterValue=ramos-key-pair ParameterKey=parameterSubnetID,ParameterValue="subnet-0debb249acb38b4d4\,subnet-0ee586e037be70cbd" ParameterKey=parameterVPCID,ParameterValue=vpc-09463952260ce2d21 ParameterKey=parameterTLSCertificateARN,ParameterValue=arn:aws:acm:ap-south-1:452351931860:certificate/33416963-436a-46a5-8bdd-846742c81785 ParameterKey=parameterIPForLoadBalancerAccess,ParameterValue=182.70.20.55/32 ParameterKey=parameterIPForSSHAccess,ParameterValue=182.70.20.55/32 --capabilities CAPABILITY_IAM

(When you update a stack, you submit changes, such as new input parameter values or an updated template. AWS CloudFormation compares the changes you submit with the current state of your stack and updates only the changed resources)


-> create the cloudformation cicd stack. You can launch this stack only after launching the web stack because it references exported values of the web stack.

aws cloudformation create-stack --stack-name ramos-cicd-stack --template-body file://cicd-with-jenkins.yaml --parameters ParameterKey=parameterAMIID,ParameterValue=ami-0caf778a172362f1c ParameterKey=parameterEC2InstanceType,ParameterValue=t2.micro ParameterKey=parameterSSHKeyPair,ParameterValue=ramos-key-pair ParameterKey=parameterIPForSSHAndJenkinsAccess,ParameterValue=182.70.20.55/32 --capabilities CAPABILITY_IAM